#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30128.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Newzic.Core
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="newzic")]
	public partial class NewzicDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertImagem(Imagem instance);
    partial void UpdateImagem(Imagem instance);
    partial void DeleteImagem(Imagem instance);
    partial void InsertComentario(Comentario instance);
    partial void UpdateComentario(Comentario instance);
    partial void DeleteComentario(Comentario instance);
    partial void InsertJornalista(Jornalista instance);
    partial void UpdateJornalista(Jornalista instance);
    partial void DeleteJornalista(Jornalista instance);
    partial void InsertVideo(Video instance);
    partial void UpdateVideo(Video instance);
    partial void DeleteVideo(Video instance);
    partial void InsertAdministrador(Administrador instance);
    partial void UpdateAdministrador(Administrador instance);
    partial void DeleteAdministrador(Administrador instance);
    partial void InsertModerador(Moderador instance);
    partial void UpdateModerador(Moderador instance);
    partial void DeleteModerador(Moderador instance);
    partial void InsertBanido(Banido instance);
    partial void UpdateBanido(Banido instance);
    partial void DeleteBanido(Banido instance);
    partial void InsertVotoNoticia(VotoNoticia instance);
    partial void UpdateVotoNoticia(VotoNoticia instance);
    partial void DeleteVotoNoticia(VotoNoticia instance);
    partial void InsertNoticiaFlagged(NoticiaFlagged instance);
    partial void UpdateNoticiaFlagged(NoticiaFlagged instance);
    partial void DeleteNoticiaFlagged(NoticiaFlagged instance);
    partial void InsertQueixa(Queixa instance);
    partial void UpdateQueixa(Queixa instance);
    partial void DeleteQueixa(Queixa instance);
    partial void InsertSessao(Sessao instance);
    partial void UpdateSessao(Sessao instance);
    partial void DeleteSessao(Sessao instance);
    partial void InsertTour(Tour instance);
    partial void UpdateTour(Tour instance);
    partial void DeleteTour(Tour instance);
    partial void InsertNoticia(Noticia instance);
    partial void UpdateNoticia(Noticia instance);
    partial void DeleteNoticia(Noticia instance);
    partial void InsertMapa(Mapa instance);
    partial void UpdateMapa(Mapa instance);
    partial void DeleteMapa(Mapa instance);
    #endregion
		
		public NewzicDataContext() : 
				base(global::Newzic.Core.Properties.Settings.Default.newzicConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public NewzicDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NewzicDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NewzicDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NewzicDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Imagem> Imagems
		{
			get
			{
				return this.GetTable<Imagem>();
			}
		}
		
		public System.Data.Linq.Table<Comentario> Comentarios
		{
			get
			{
				return this.GetTable<Comentario>();
			}
		}
		
		public System.Data.Linq.Table<Jornalista> Jornalistas
		{
			get
			{
				return this.GetTable<Jornalista>();
			}
		}
		
		public System.Data.Linq.Table<Video> Videos
		{
			get
			{
				return this.GetTable<Video>();
			}
		}
		
		public System.Data.Linq.Table<Administrador> Administradors
		{
			get
			{
				return this.GetTable<Administrador>();
			}
		}
		
		public System.Data.Linq.Table<Moderador> Moderadors
		{
			get
			{
				return this.GetTable<Moderador>();
			}
		}
		
		public System.Data.Linq.Table<Banido> Banidos
		{
			get
			{
				return this.GetTable<Banido>();
			}
		}
		
		public System.Data.Linq.Table<VotoNoticia> VotoNoticias
		{
			get
			{
				return this.GetTable<VotoNoticia>();
			}
		}
		
		public System.Data.Linq.Table<NoticiaFlagged> NoticiaFlaggeds
		{
			get
			{
				return this.GetTable<NoticiaFlagged>();
			}
		}
		
		public System.Data.Linq.Table<Queixa> Queixas
		{
			get
			{
				return this.GetTable<Queixa>();
			}
		}
		
		public System.Data.Linq.Table<Sessao> Sessaos
		{
			get
			{
				return this.GetTable<Sessao>();
			}
		}
		
		public System.Data.Linq.Table<Tour> Tours
		{
			get
			{
				return this.GetTable<Tour>();
			}
		}
		
		public System.Data.Linq.Table<Noticia> Noticias
		{
			get
			{
				return this.GetTable<Noticia>();
			}
		}
		
		public System.Data.Linq.Table<Mapa> Mapas
		{
			get
			{
				return this.GetTable<Mapa>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Imagem")]
	public partial class Imagem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ImagemId;
		
		private System.Data.Linq.Binary _ImageFile;
		
		private System.Guid _NoticiaId;
		
		private EntityRef<Noticia> _Noticia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImagemIdChanging(System.Guid value);
    partial void OnImagemIdChanged();
    partial void OnImageFileChanging(System.Data.Linq.Binary value);
    partial void OnImageFileChanged();
    partial void OnNoticiaIdChanging(System.Guid value);
    partial void OnNoticiaIdChanged();
    #endregion
		
		public Imagem()
		{
			this._Noticia = default(EntityRef<Noticia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagemId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ImagemId
		{
			get
			{
				return this._ImagemId;
			}
			set
			{
				if ((this._ImagemId != value))
				{
					this.OnImagemIdChanging(value);
					this.SendPropertyChanging();
					this._ImagemId = value;
					this.SendPropertyChanged("ImagemId");
					this.OnImagemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Imagem", Storage="_ImageFile", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ImageFile
		{
			get
			{
				return this._ImageFile;
			}
			set
			{
				if ((this._ImageFile != value))
				{
					this.OnImageFileChanging(value);
					this.SendPropertyChanging();
					this._ImageFile = value;
					this.SendPropertyChanged("ImageFile");
					this.OnImageFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticiaId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid NoticiaId
		{
			get
			{
				return this._NoticiaId;
			}
			set
			{
				if ((this._NoticiaId != value))
				{
					if (this._Noticia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNoticiaIdChanging(value);
					this.SendPropertyChanging();
					this._NoticiaId = value;
					this.SendPropertyChanged("NoticiaId");
					this.OnNoticiaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Noticia_Imagem", Storage="_Noticia", ThisKey="NoticiaId", OtherKey="NoticiaId", IsForeignKey=true)]
		public Noticia Noticia
		{
			get
			{
				return this._Noticia.Entity;
			}
			set
			{
				Noticia previousValue = this._Noticia.Entity;
				if (((previousValue != value) 
							|| (this._Noticia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Noticia.Entity = null;
						previousValue.Imagems.Remove(this);
					}
					this._Noticia.Entity = value;
					if ((value != null))
					{
						value.Imagems.Add(this);
						this._NoticiaId = value.NoticiaId;
					}
					else
					{
						this._NoticiaId = default(System.Guid);
					}
					this.SendPropertyChanged("Noticia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comentario")]
	public partial class Comentario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ComentarioId;
		
		private string _Texto;
		
		private System.Guid _NoticiaId;
		
		private System.Guid _JornalistaId;
		
		private EntityRef<Jornalista> _Jornalista;
		
		private EntityRef<Noticia> _Noticia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnComentarioIdChanging(System.Guid value);
    partial void OnComentarioIdChanged();
    partial void OnTextoChanging(string value);
    partial void OnTextoChanged();
    partial void OnNoticiaIdChanging(System.Guid value);
    partial void OnNoticiaIdChanged();
    partial void OnJornalistaIdChanging(System.Guid value);
    partial void OnJornalistaIdChanged();
    #endregion
		
		public Comentario()
		{
			this._Jornalista = default(EntityRef<Jornalista>);
			this._Noticia = default(EntityRef<Noticia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComentarioId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ComentarioId
		{
			get
			{
				return this._ComentarioId;
			}
			set
			{
				if ((this._ComentarioId != value))
				{
					this.OnComentarioIdChanging(value);
					this.SendPropertyChanging();
					this._ComentarioId = value;
					this.SendPropertyChanged("ComentarioId");
					this.OnComentarioIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Texto", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Texto
		{
			get
			{
				return this._Texto;
			}
			set
			{
				if ((this._Texto != value))
				{
					this.OnTextoChanging(value);
					this.SendPropertyChanging();
					this._Texto = value;
					this.SendPropertyChanged("Texto");
					this.OnTextoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticiaId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid NoticiaId
		{
			get
			{
				return this._NoticiaId;
			}
			set
			{
				if ((this._NoticiaId != value))
				{
					if (this._Noticia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNoticiaIdChanging(value);
					this.SendPropertyChanging();
					this._NoticiaId = value;
					this.SendPropertyChanged("NoticiaId");
					this.OnNoticiaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JornalistaId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid JornalistaId
		{
			get
			{
				return this._JornalistaId;
			}
			set
			{
				if ((this._JornalistaId != value))
				{
					if (this._Jornalista.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJornalistaIdChanging(value);
					this.SendPropertyChanging();
					this._JornalistaId = value;
					this.SendPropertyChanged("JornalistaId");
					this.OnJornalistaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jornalista_Comentario", Storage="_Jornalista", ThisKey="JornalistaId", OtherKey="JornalistaId", IsForeignKey=true)]
		public Jornalista Jornalista
		{
			get
			{
				return this._Jornalista.Entity;
			}
			set
			{
				Jornalista previousValue = this._Jornalista.Entity;
				if (((previousValue != value) 
							|| (this._Jornalista.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Jornalista.Entity = null;
						previousValue.Comentarios.Remove(this);
					}
					this._Jornalista.Entity = value;
					if ((value != null))
					{
						value.Comentarios.Add(this);
						this._JornalistaId = value.JornalistaId;
					}
					else
					{
						this._JornalistaId = default(System.Guid);
					}
					this.SendPropertyChanged("Jornalista");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Noticia_Comentario", Storage="_Noticia", ThisKey="NoticiaId", OtherKey="NoticiaId", IsForeignKey=true)]
		public Noticia Noticia
		{
			get
			{
				return this._Noticia.Entity;
			}
			set
			{
				Noticia previousValue = this._Noticia.Entity;
				if (((previousValue != value) 
							|| (this._Noticia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Noticia.Entity = null;
						previousValue.Comentarios.Remove(this);
					}
					this._Noticia.Entity = value;
					if ((value != null))
					{
						value.Comentarios.Add(this);
						this._NoticiaId = value.NoticiaId;
					}
					else
					{
						this._NoticiaId = default(System.Guid);
					}
					this.SendPropertyChanged("Noticia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Jornalista")]
	public partial class Jornalista : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nome;
		
		private string _Email;
		
		private string _Password;
		
		private System.Guid _JornalistaId;
		
		private EntitySet<Comentario> _Comentarios;
		
		private EntityRef<Administrador> _Administrador;
		
		private EntityRef<Moderador> _Moderador;
		
		private EntitySet<Banido> _Banidos;
		
		private EntitySet<VotoNoticia> _VotoNoticias;
		
		private EntitySet<Queixa> _Queixas;
		
		private EntityRef<Sessao> _Sessao;
		
		private EntitySet<Noticia> _Noticias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnJornalistaIdChanging(System.Guid value);
    partial void OnJornalistaIdChanged();
    #endregion
		
		public Jornalista()
		{
			this._Comentarios = new EntitySet<Comentario>(new Action<Comentario>(this.attach_Comentarios), new Action<Comentario>(this.detach_Comentarios));
			this._Administrador = default(EntityRef<Administrador>);
			this._Moderador = default(EntityRef<Moderador>);
			this._Banidos = new EntitySet<Banido>(new Action<Banido>(this.attach_Banidos), new Action<Banido>(this.detach_Banidos));
			this._VotoNoticias = new EntitySet<VotoNoticia>(new Action<VotoNoticia>(this.attach_VotoNoticias), new Action<VotoNoticia>(this.detach_VotoNoticias));
			this._Queixas = new EntitySet<Queixa>(new Action<Queixa>(this.attach_Queixas), new Action<Queixa>(this.detach_Queixas));
			this._Sessao = default(EntityRef<Sessao>);
			this._Noticias = new EntitySet<Noticia>(new Action<Noticia>(this.attach_Noticias), new Action<Noticia>(this.detach_Noticias));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="NChar(64) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NChar(160) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JornalistaId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid JornalistaId
		{
			get
			{
				return this._JornalistaId;
			}
			set
			{
				if ((this._JornalistaId != value))
				{
					this.OnJornalistaIdChanging(value);
					this.SendPropertyChanging();
					this._JornalistaId = value;
					this.SendPropertyChanged("JornalistaId");
					this.OnJornalistaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jornalista_Comentario", Storage="_Comentarios", ThisKey="JornalistaId", OtherKey="JornalistaId")]
		public EntitySet<Comentario> Comentarios
		{
			get
			{
				return this._Comentarios;
			}
			set
			{
				this._Comentarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jornalista_Administrador", Storage="_Administrador", ThisKey="JornalistaId", OtherKey="AdministradorId", IsUnique=true, IsForeignKey=false)]
		public Administrador Administrador
		{
			get
			{
				return this._Administrador.Entity;
			}
			set
			{
				Administrador previousValue = this._Administrador.Entity;
				if (((previousValue != value) 
							|| (this._Administrador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Administrador.Entity = null;
						previousValue.Jornalista = null;
					}
					this._Administrador.Entity = value;
					if ((value != null))
					{
						value.Jornalista = this;
					}
					this.SendPropertyChanged("Administrador");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jornalista_Moderador", Storage="_Moderador", ThisKey="JornalistaId", OtherKey="ModeradorId", IsUnique=true, IsForeignKey=false)]
		public Moderador Moderador
		{
			get
			{
				return this._Moderador.Entity;
			}
			set
			{
				Moderador previousValue = this._Moderador.Entity;
				if (((previousValue != value) 
							|| (this._Moderador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Moderador.Entity = null;
						previousValue.Jornalista = null;
					}
					this._Moderador.Entity = value;
					if ((value != null))
					{
						value.Jornalista = this;
					}
					this.SendPropertyChanged("Moderador");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jornalista_Banido", Storage="_Banidos", ThisKey="JornalistaId", OtherKey="JornalistaId")]
		public EntitySet<Banido> Banidos
		{
			get
			{
				return this._Banidos;
			}
			set
			{
				this._Banidos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jornalista_VotoNoticia", Storage="_VotoNoticias", ThisKey="JornalistaId", OtherKey="JornalistaId")]
		public EntitySet<VotoNoticia> VotoNoticias
		{
			get
			{
				return this._VotoNoticias;
			}
			set
			{
				this._VotoNoticias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jornalista_Queixa", Storage="_Queixas", ThisKey="JornalistaId", OtherKey="JornalistaId")]
		public EntitySet<Queixa> Queixas
		{
			get
			{
				return this._Queixas;
			}
			set
			{
				this._Queixas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jornalista_Sessao", Storage="_Sessao", ThisKey="JornalistaId", OtherKey="JornalistaId", IsUnique=true, IsForeignKey=false)]
		public Sessao Sessao
		{
			get
			{
				return this._Sessao.Entity;
			}
			set
			{
				Sessao previousValue = this._Sessao.Entity;
				if (((previousValue != value) 
							|| (this._Sessao.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sessao.Entity = null;
						previousValue.Jornalista = null;
					}
					this._Sessao.Entity = value;
					if ((value != null))
					{
						value.Jornalista = this;
					}
					this.SendPropertyChanged("Sessao");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jornalista_Noticia", Storage="_Noticias", ThisKey="JornalistaId", OtherKey="JornalistaId")]
		public EntitySet<Noticia> Noticias
		{
			get
			{
				return this._Noticias;
			}
			set
			{
				this._Noticias.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Comentarios(Comentario entity)
		{
			this.SendPropertyChanging();
			entity.Jornalista = this;
		}
		
		private void detach_Comentarios(Comentario entity)
		{
			this.SendPropertyChanging();
			entity.Jornalista = null;
		}
		
		private void attach_Banidos(Banido entity)
		{
			this.SendPropertyChanging();
			entity.Jornalista = this;
		}
		
		private void detach_Banidos(Banido entity)
		{
			this.SendPropertyChanging();
			entity.Jornalista = null;
		}
		
		private void attach_VotoNoticias(VotoNoticia entity)
		{
			this.SendPropertyChanging();
			entity.Jornalista = this;
		}
		
		private void detach_VotoNoticias(VotoNoticia entity)
		{
			this.SendPropertyChanging();
			entity.Jornalista = null;
		}
		
		private void attach_Queixas(Queixa entity)
		{
			this.SendPropertyChanging();
			entity.Jornalista = this;
		}
		
		private void detach_Queixas(Queixa entity)
		{
			this.SendPropertyChanging();
			entity.Jornalista = null;
		}
		
		private void attach_Noticias(Noticia entity)
		{
			this.SendPropertyChanging();
			entity.Jornalista = this;
		}
		
		private void detach_Noticias(Noticia entity)
		{
			this.SendPropertyChanging();
			entity.Jornalista = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Video")]
	public partial class Video : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _VideoId;
		
		private System.Guid _NoticiaId;
		
		private string _Url;
		
		private EntityRef<Noticia> _Noticia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVideoIdChanging(System.Guid value);
    partial void OnVideoIdChanged();
    partial void OnNoticiaIdChanging(System.Guid value);
    partial void OnNoticiaIdChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    #endregion
		
		public Video()
		{
			this._Noticia = default(EntityRef<Noticia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid VideoId
		{
			get
			{
				return this._VideoId;
			}
			set
			{
				if ((this._VideoId != value))
				{
					this.OnVideoIdChanging(value);
					this.SendPropertyChanging();
					this._VideoId = value;
					this.SendPropertyChanged("VideoId");
					this.OnVideoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticiaId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid NoticiaId
		{
			get
			{
				return this._NoticiaId;
			}
			set
			{
				if ((this._NoticiaId != value))
				{
					if (this._Noticia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNoticiaIdChanging(value);
					this.SendPropertyChanging();
					this._NoticiaId = value;
					this.SendPropertyChanged("NoticiaId");
					this.OnNoticiaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Noticia_Video", Storage="_Noticia", ThisKey="NoticiaId", OtherKey="NoticiaId", IsForeignKey=true)]
		public Noticia Noticia
		{
			get
			{
				return this._Noticia.Entity;
			}
			set
			{
				Noticia previousValue = this._Noticia.Entity;
				if (((previousValue != value) 
							|| (this._Noticia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Noticia.Entity = null;
						previousValue.Videos.Remove(this);
					}
					this._Noticia.Entity = value;
					if ((value != null))
					{
						value.Videos.Add(this);
						this._NoticiaId = value.NoticiaId;
					}
					else
					{
						this._NoticiaId = default(System.Guid);
					}
					this.SendPropertyChanged("Noticia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Administrador")]
	public partial class Administrador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _AdministradorId;
		
		private EntityRef<Jornalista> _Jornalista;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdministradorIdChanging(System.Guid value);
    partial void OnAdministradorIdChanged();
    #endregion
		
		public Administrador()
		{
			this._Jornalista = default(EntityRef<Jornalista>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdministradorId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid AdministradorId
		{
			get
			{
				return this._AdministradorId;
			}
			set
			{
				if ((this._AdministradorId != value))
				{
					if (this._Jornalista.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdministradorIdChanging(value);
					this.SendPropertyChanging();
					this._AdministradorId = value;
					this.SendPropertyChanged("AdministradorId");
					this.OnAdministradorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jornalista_Administrador", Storage="_Jornalista", ThisKey="AdministradorId", OtherKey="JornalistaId", IsForeignKey=true)]
		public Jornalista Jornalista
		{
			get
			{
				return this._Jornalista.Entity;
			}
			set
			{
				Jornalista previousValue = this._Jornalista.Entity;
				if (((previousValue != value) 
							|| (this._Jornalista.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Jornalista.Entity = null;
						previousValue.Administrador = null;
					}
					this._Jornalista.Entity = value;
					if ((value != null))
					{
						value.Administrador = this;
						this._AdministradorId = value.JornalistaId;
					}
					else
					{
						this._AdministradorId = default(System.Guid);
					}
					this.SendPropertyChanged("Jornalista");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Moderador")]
	public partial class Moderador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ModeradorId;
		
		private EntityRef<Jornalista> _Jornalista;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModeradorIdChanging(System.Guid value);
    partial void OnModeradorIdChanged();
    #endregion
		
		public Moderador()
		{
			this._Jornalista = default(EntityRef<Jornalista>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModeradorId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ModeradorId
		{
			get
			{
				return this._ModeradorId;
			}
			set
			{
				if ((this._ModeradorId != value))
				{
					if (this._Jornalista.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModeradorIdChanging(value);
					this.SendPropertyChanging();
					this._ModeradorId = value;
					this.SendPropertyChanged("ModeradorId");
					this.OnModeradorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jornalista_Moderador", Storage="_Jornalista", ThisKey="ModeradorId", OtherKey="JornalistaId", IsForeignKey=true)]
		public Jornalista Jornalista
		{
			get
			{
				return this._Jornalista.Entity;
			}
			set
			{
				Jornalista previousValue = this._Jornalista.Entity;
				if (((previousValue != value) 
							|| (this._Jornalista.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Jornalista.Entity = null;
						previousValue.Moderador = null;
					}
					this._Jornalista.Entity = value;
					if ((value != null))
					{
						value.Moderador = this;
						this._ModeradorId = value.JornalistaId;
					}
					else
					{
						this._ModeradorId = default(System.Guid);
					}
					this.SendPropertyChanged("Jornalista");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Banido")]
	public partial class Banido : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _BanidoId;
		
		private System.Guid _JornalistaId;
		
		private System.Nullable<System.DateTime> _DataFim;
		
		private bool _Permanente;
		
		private EntityRef<Jornalista> _Jornalista;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBanidoIdChanging(System.Guid value);
    partial void OnBanidoIdChanged();
    partial void OnJornalistaIdChanging(System.Guid value);
    partial void OnJornalistaIdChanged();
    partial void OnDataFimChanging(System.Nullable<System.DateTime> value);
    partial void OnDataFimChanged();
    partial void OnPermanenteChanging(bool value);
    partial void OnPermanenteChanged();
    #endregion
		
		public Banido()
		{
			this._Jornalista = default(EntityRef<Jornalista>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BanidoId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid BanidoId
		{
			get
			{
				return this._BanidoId;
			}
			set
			{
				if ((this._BanidoId != value))
				{
					this.OnBanidoIdChanging(value);
					this.SendPropertyChanging();
					this._BanidoId = value;
					this.SendPropertyChanged("BanidoId");
					this.OnBanidoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JornalistaId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid JornalistaId
		{
			get
			{
				return this._JornalistaId;
			}
			set
			{
				if ((this._JornalistaId != value))
				{
					if (this._Jornalista.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJornalistaIdChanging(value);
					this.SendPropertyChanging();
					this._JornalistaId = value;
					this.SendPropertyChanged("JornalistaId");
					this.OnJornalistaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataFim", DbType="DateTime")]
		public System.Nullable<System.DateTime> DataFim
		{
			get
			{
				return this._DataFim;
			}
			set
			{
				if ((this._DataFim != value))
				{
					this.OnDataFimChanging(value);
					this.SendPropertyChanging();
					this._DataFim = value;
					this.SendPropertyChanged("DataFim");
					this.OnDataFimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Permanente", DbType="Bit NOT NULL")]
		public bool Permanente
		{
			get
			{
				return this._Permanente;
			}
			set
			{
				if ((this._Permanente != value))
				{
					this.OnPermanenteChanging(value);
					this.SendPropertyChanging();
					this._Permanente = value;
					this.SendPropertyChanged("Permanente");
					this.OnPermanenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jornalista_Banido", Storage="_Jornalista", ThisKey="JornalistaId", OtherKey="JornalistaId", IsForeignKey=true)]
		public Jornalista Jornalista
		{
			get
			{
				return this._Jornalista.Entity;
			}
			set
			{
				Jornalista previousValue = this._Jornalista.Entity;
				if (((previousValue != value) 
							|| (this._Jornalista.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Jornalista.Entity = null;
						previousValue.Banidos.Remove(this);
					}
					this._Jornalista.Entity = value;
					if ((value != null))
					{
						value.Banidos.Add(this);
						this._JornalistaId = value.JornalistaId;
					}
					else
					{
						this._JornalistaId = default(System.Guid);
					}
					this.SendPropertyChanged("Jornalista");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VotoNoticia")]
	public partial class VotoNoticia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _NoticiaId;
		
		private System.Guid _JornalistaId;
		
		private EntityRef<Jornalista> _Jornalista;
		
		private EntityRef<Noticia> _Noticia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNoticiaIdChanging(System.Guid value);
    partial void OnNoticiaIdChanged();
    partial void OnJornalistaIdChanging(System.Guid value);
    partial void OnJornalistaIdChanged();
    #endregion
		
		public VotoNoticia()
		{
			this._Jornalista = default(EntityRef<Jornalista>);
			this._Noticia = default(EntityRef<Noticia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticiaId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid NoticiaId
		{
			get
			{
				return this._NoticiaId;
			}
			set
			{
				if ((this._NoticiaId != value))
				{
					if (this._Noticia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNoticiaIdChanging(value);
					this.SendPropertyChanging();
					this._NoticiaId = value;
					this.SendPropertyChanged("NoticiaId");
					this.OnNoticiaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JornalistaId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid JornalistaId
		{
			get
			{
				return this._JornalistaId;
			}
			set
			{
				if ((this._JornalistaId != value))
				{
					if (this._Jornalista.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJornalistaIdChanging(value);
					this.SendPropertyChanging();
					this._JornalistaId = value;
					this.SendPropertyChanged("JornalistaId");
					this.OnJornalistaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jornalista_VotoNoticia", Storage="_Jornalista", ThisKey="JornalistaId", OtherKey="JornalistaId", IsForeignKey=true)]
		public Jornalista Jornalista
		{
			get
			{
				return this._Jornalista.Entity;
			}
			set
			{
				Jornalista previousValue = this._Jornalista.Entity;
				if (((previousValue != value) 
							|| (this._Jornalista.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Jornalista.Entity = null;
						previousValue.VotoNoticias.Remove(this);
					}
					this._Jornalista.Entity = value;
					if ((value != null))
					{
						value.VotoNoticias.Add(this);
						this._JornalistaId = value.JornalistaId;
					}
					else
					{
						this._JornalistaId = default(System.Guid);
					}
					this.SendPropertyChanged("Jornalista");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Noticia_VotoNoticia", Storage="_Noticia", ThisKey="NoticiaId", OtherKey="NoticiaId", IsForeignKey=true)]
		public Noticia Noticia
		{
			get
			{
				return this._Noticia.Entity;
			}
			set
			{
				Noticia previousValue = this._Noticia.Entity;
				if (((previousValue != value) 
							|| (this._Noticia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Noticia.Entity = null;
						previousValue.VotoNoticias.Remove(this);
					}
					this._Noticia.Entity = value;
					if ((value != null))
					{
						value.VotoNoticias.Add(this);
						this._NoticiaId = value.NoticiaId;
					}
					else
					{
						this._NoticiaId = default(System.Guid);
					}
					this.SendPropertyChanged("Noticia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NoticiaFlagged")]
	public partial class NoticiaFlagged : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _NoticiaId;
		
		private System.DateTime _Data;
		
		private EntityRef<Noticia> _Noticia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNoticiaIdChanging(System.Guid value);
    partial void OnNoticiaIdChanged();
    partial void OnDataChanging(System.DateTime value);
    partial void OnDataChanged();
    #endregion
		
		public NoticiaFlagged()
		{
			this._Noticia = default(EntityRef<Noticia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticiaId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid NoticiaId
		{
			get
			{
				return this._NoticiaId;
			}
			set
			{
				if ((this._NoticiaId != value))
				{
					if (this._Noticia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNoticiaIdChanging(value);
					this.SendPropertyChanging();
					this._NoticiaId = value;
					this.SendPropertyChanged("NoticiaId");
					this.OnNoticiaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Noticia_NoticiaFlagged", Storage="_Noticia", ThisKey="NoticiaId", OtherKey="NoticiaId", IsForeignKey=true)]
		public Noticia Noticia
		{
			get
			{
				return this._Noticia.Entity;
			}
			set
			{
				Noticia previousValue = this._Noticia.Entity;
				if (((previousValue != value) 
							|| (this._Noticia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Noticia.Entity = null;
						previousValue.NoticiaFlaggeds.Remove(this);
					}
					this._Noticia.Entity = value;
					if ((value != null))
					{
						value.NoticiaFlaggeds.Add(this);
						this._NoticiaId = value.NoticiaId;
					}
					else
					{
						this._NoticiaId = default(System.Guid);
					}
					this.SendPropertyChanged("Noticia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Queixa")]
	public partial class Queixa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _QueixaId;
		
		private System.Guid _JornalistaId;
		
		private System.Guid _AcusadoId;
		
		private string _Texto;
		
		private bool _Resolved;
		
		private string _Assunto;
		
		private EntityRef<Jornalista> _Jornalista;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQueixaIdChanging(System.Guid value);
    partial void OnQueixaIdChanged();
    partial void OnJornalistaIdChanging(System.Guid value);
    partial void OnJornalistaIdChanged();
    partial void OnAcusadoIdChanging(System.Guid value);
    partial void OnAcusadoIdChanged();
    partial void OnTextoChanging(string value);
    partial void OnTextoChanged();
    partial void OnResolvedChanging(bool value);
    partial void OnResolvedChanged();
    partial void OnAssuntoChanging(string value);
    partial void OnAssuntoChanged();
    #endregion
		
		public Queixa()
		{
			this._Jornalista = default(EntityRef<Jornalista>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueixaId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid QueixaId
		{
			get
			{
				return this._QueixaId;
			}
			set
			{
				if ((this._QueixaId != value))
				{
					this.OnQueixaIdChanging(value);
					this.SendPropertyChanging();
					this._QueixaId = value;
					this.SendPropertyChanged("QueixaId");
					this.OnQueixaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JornalistaId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid JornalistaId
		{
			get
			{
				return this._JornalistaId;
			}
			set
			{
				if ((this._JornalistaId != value))
				{
					if (this._Jornalista.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJornalistaIdChanging(value);
					this.SendPropertyChanging();
					this._JornalistaId = value;
					this.SendPropertyChanged("JornalistaId");
					this.OnJornalistaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcusadoId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AcusadoId
		{
			get
			{
				return this._AcusadoId;
			}
			set
			{
				if ((this._AcusadoId != value))
				{
					this.OnAcusadoIdChanging(value);
					this.SendPropertyChanging();
					this._AcusadoId = value;
					this.SendPropertyChanged("AcusadoId");
					this.OnAcusadoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Texto", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Texto
		{
			get
			{
				return this._Texto;
			}
			set
			{
				if ((this._Texto != value))
				{
					this.OnTextoChanging(value);
					this.SendPropertyChanging();
					this._Texto = value;
					this.SendPropertyChanged("Texto");
					this.OnTextoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resolved", DbType="Bit NOT NULL")]
		public bool Resolved
		{
			get
			{
				return this._Resolved;
			}
			set
			{
				if ((this._Resolved != value))
				{
					this.OnResolvedChanging(value);
					this.SendPropertyChanging();
					this._Resolved = value;
					this.SendPropertyChanged("Resolved");
					this.OnResolvedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assunto", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Assunto
		{
			get
			{
				return this._Assunto;
			}
			set
			{
				if ((this._Assunto != value))
				{
					this.OnAssuntoChanging(value);
					this.SendPropertyChanging();
					this._Assunto = value;
					this.SendPropertyChanged("Assunto");
					this.OnAssuntoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jornalista_Queixa", Storage="_Jornalista", ThisKey="JornalistaId", OtherKey="JornalistaId", IsForeignKey=true)]
		public Jornalista Jornalista
		{
			get
			{
				return this._Jornalista.Entity;
			}
			set
			{
				Jornalista previousValue = this._Jornalista.Entity;
				if (((previousValue != value) 
							|| (this._Jornalista.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Jornalista.Entity = null;
						previousValue.Queixas.Remove(this);
					}
					this._Jornalista.Entity = value;
					if ((value != null))
					{
						value.Queixas.Add(this);
						this._JornalistaId = value.JornalistaId;
					}
					else
					{
						this._JornalistaId = default(System.Guid);
					}
					this.SendPropertyChanged("Jornalista");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sessao")]
	public partial class Sessao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Token;
		
		private System.DateTime _Timestamp;
		
		private System.Guid _JornalistaId;
		
		private EntityRef<Jornalista> _Jornalista;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTokenChanging(string value);
    partial void OnTokenChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    partial void OnJornalistaIdChanging(System.Guid value);
    partial void OnJornalistaIdChanged();
    #endregion
		
		public Sessao()
		{
			this._Jornalista = default(EntityRef<Jornalista>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this.OnTokenChanging(value);
					this.SendPropertyChanging();
					this._Token = value;
					this.SendPropertyChanged("Token");
					this.OnTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL")]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JornalistaId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid JornalistaId
		{
			get
			{
				return this._JornalistaId;
			}
			set
			{
				if ((this._JornalistaId != value))
				{
					if (this._Jornalista.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJornalistaIdChanging(value);
					this.SendPropertyChanging();
					this._JornalistaId = value;
					this.SendPropertyChanged("JornalistaId");
					this.OnJornalistaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jornalista_Sessao", Storage="_Jornalista", ThisKey="JornalistaId", OtherKey="JornalistaId", IsForeignKey=true)]
		public Jornalista Jornalista
		{
			get
			{
				return this._Jornalista.Entity;
			}
			set
			{
				Jornalista previousValue = this._Jornalista.Entity;
				if (((previousValue != value) 
							|| (this._Jornalista.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Jornalista.Entity = null;
						previousValue.Sessao = null;
					}
					this._Jornalista.Entity = value;
					if ((value != null))
					{
						value.Sessao = this;
						this._JornalistaId = value.JornalistaId;
					}
					else
					{
						this._JornalistaId = default(System.Guid);
					}
					this.SendPropertyChanged("Jornalista");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tour")]
	public partial class Tour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _TourId;
		
		private System.Guid _MapaId;
		
		private double _Longitude;
		
		private double _Latitude;
		
		private string _Morada;
		
		private EntityRef<Mapa> _Mapa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTourIdChanging(System.Guid value);
    partial void OnTourIdChanged();
    partial void OnMapaIdChanging(System.Guid value);
    partial void OnMapaIdChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnMoradaChanging(string value);
    partial void OnMoradaChanged();
    #endregion
		
		public Tour()
		{
			this._Mapa = default(EntityRef<Mapa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TourId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TourId
		{
			get
			{
				return this._TourId;
			}
			set
			{
				if ((this._TourId != value))
				{
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._TourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapaId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MapaId
		{
			get
			{
				return this._MapaId;
			}
			set
			{
				if ((this._MapaId != value))
				{
					if (this._Mapa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMapaIdChanging(value);
					this.SendPropertyChanging();
					this._MapaId = value;
					this.SendPropertyChanged("MapaId");
					this.OnMapaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Morada", DbType="VarChar(256)")]
		public string Morada
		{
			get
			{
				return this._Morada;
			}
			set
			{
				if ((this._Morada != value))
				{
					this.OnMoradaChanging(value);
					this.SendPropertyChanging();
					this._Morada = value;
					this.SendPropertyChanged("Morada");
					this.OnMoradaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mapa_Tour", Storage="_Mapa", ThisKey="MapaId", OtherKey="MapaId", IsForeignKey=true)]
		public Mapa Mapa
		{
			get
			{
				return this._Mapa.Entity;
			}
			set
			{
				Mapa previousValue = this._Mapa.Entity;
				if (((previousValue != value) 
							|| (this._Mapa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mapa.Entity = null;
						previousValue.Tours.Remove(this);
					}
					this._Mapa.Entity = value;
					if ((value != null))
					{
						value.Tours.Add(this);
						this._MapaId = value.MapaId;
					}
					else
					{
						this._MapaId = default(System.Guid);
					}
					this.SendPropertyChanged("Mapa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Noticia")]
	public partial class Noticia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _NoticiaId;
		
		private string _Titulo;
		
		private string _Corpo;
		
		private int _Pontuacao;
		
		private System.DateTime _Data;
		
		private int _FlagCount;
		
		private bool _Deleted;
		
		private bool _Marked;
		
		private System.Guid _JornalistaId;
		
		private string _Tags;
		
		private System.Nullable<System.Guid> _MapaId;
		
		private EntitySet<Imagem> _Imagems;
		
		private EntitySet<Comentario> _Comentarios;
		
		private EntitySet<Video> _Videos;
		
		private EntitySet<VotoNoticia> _VotoNoticias;
		
		private EntitySet<NoticiaFlagged> _NoticiaFlaggeds;
		
		private EntityRef<Jornalista> _Jornalista;
		
		private EntityRef<Mapa> _Mapa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNoticiaIdChanging(System.Guid value);
    partial void OnNoticiaIdChanged();
    partial void OnTituloChanging(string value);
    partial void OnTituloChanged();
    partial void OnCorpoChanging(string value);
    partial void OnCorpoChanged();
    partial void OnPontuacaoChanging(int value);
    partial void OnPontuacaoChanged();
    partial void OnDataChanging(System.DateTime value);
    partial void OnDataChanged();
    partial void OnFlagCountChanging(int value);
    partial void OnFlagCountChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnMarkedChanging(bool value);
    partial void OnMarkedChanged();
    partial void OnJornalistaIdChanging(System.Guid value);
    partial void OnJornalistaIdChanged();
    partial void OnTagsChanging(string value);
    partial void OnTagsChanged();
    partial void OnMapaIdChanging(System.Nullable<System.Guid> value);
    partial void OnMapaIdChanged();
    #endregion
		
		public Noticia()
		{
			this._Imagems = new EntitySet<Imagem>(new Action<Imagem>(this.attach_Imagems), new Action<Imagem>(this.detach_Imagems));
			this._Comentarios = new EntitySet<Comentario>(new Action<Comentario>(this.attach_Comentarios), new Action<Comentario>(this.detach_Comentarios));
			this._Videos = new EntitySet<Video>(new Action<Video>(this.attach_Videos), new Action<Video>(this.detach_Videos));
			this._VotoNoticias = new EntitySet<VotoNoticia>(new Action<VotoNoticia>(this.attach_VotoNoticias), new Action<VotoNoticia>(this.detach_VotoNoticias));
			this._NoticiaFlaggeds = new EntitySet<NoticiaFlagged>(new Action<NoticiaFlagged>(this.attach_NoticiaFlaggeds), new Action<NoticiaFlagged>(this.detach_NoticiaFlaggeds));
			this._Jornalista = default(EntityRef<Jornalista>);
			this._Mapa = default(EntityRef<Mapa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticiaId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid NoticiaId
		{
			get
			{
				return this._NoticiaId;
			}
			set
			{
				if ((this._NoticiaId != value))
				{
					this.OnNoticiaIdChanging(value);
					this.SendPropertyChanging();
					this._NoticiaId = value;
					this.SendPropertyChanged("NoticiaId");
					this.OnNoticiaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titulo", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Titulo
		{
			get
			{
				return this._Titulo;
			}
			set
			{
				if ((this._Titulo != value))
				{
					this.OnTituloChanging(value);
					this.SendPropertyChanging();
					this._Titulo = value;
					this.SendPropertyChanged("Titulo");
					this.OnTituloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Corpo", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Corpo
		{
			get
			{
				return this._Corpo;
			}
			set
			{
				if ((this._Corpo != value))
				{
					this.OnCorpoChanging(value);
					this.SendPropertyChanging();
					this._Corpo = value;
					this.SendPropertyChanged("Corpo");
					this.OnCorpoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pontuacao", DbType="Int NOT NULL")]
		public int Pontuacao
		{
			get
			{
				return this._Pontuacao;
			}
			set
			{
				if ((this._Pontuacao != value))
				{
					this.OnPontuacaoChanging(value);
					this.SendPropertyChanging();
					this._Pontuacao = value;
					this.SendPropertyChanged("Pontuacao");
					this.OnPontuacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="DateTime NOT NULL")]
		public System.DateTime Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlagCount", DbType="Int NOT NULL")]
		public int FlagCount
		{
			get
			{
				return this._FlagCount;
			}
			set
			{
				if ((this._FlagCount != value))
				{
					this.OnFlagCountChanging(value);
					this.SendPropertyChanging();
					this._FlagCount = value;
					this.SendPropertyChanged("FlagCount");
					this.OnFlagCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marked", DbType="Bit NOT NULL")]
		public bool Marked
		{
			get
			{
				return this._Marked;
			}
			set
			{
				if ((this._Marked != value))
				{
					this.OnMarkedChanging(value);
					this.SendPropertyChanging();
					this._Marked = value;
					this.SendPropertyChanged("Marked");
					this.OnMarkedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JornalistaId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid JornalistaId
		{
			get
			{
				return this._JornalistaId;
			}
			set
			{
				if ((this._JornalistaId != value))
				{
					if (this._Jornalista.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJornalistaIdChanging(value);
					this.SendPropertyChanging();
					this._JornalistaId = value;
					this.SendPropertyChanged("JornalistaId");
					this.OnJornalistaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tags", DbType="VarChar(512) NOT NULL", CanBeNull=false)]
		public string Tags
		{
			get
			{
				return this._Tags;
			}
			set
			{
				if ((this._Tags != value))
				{
					this.OnTagsChanging(value);
					this.SendPropertyChanging();
					this._Tags = value;
					this.SendPropertyChanged("Tags");
					this.OnTagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapaId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> MapaId
		{
			get
			{
				return this._MapaId;
			}
			set
			{
				if ((this._MapaId != value))
				{
					if (this._Mapa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMapaIdChanging(value);
					this.SendPropertyChanging();
					this._MapaId = value;
					this.SendPropertyChanged("MapaId");
					this.OnMapaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Noticia_Imagem", Storage="_Imagems", ThisKey="NoticiaId", OtherKey="NoticiaId")]
		public EntitySet<Imagem> Imagems
		{
			get
			{
				return this._Imagems;
			}
			set
			{
				this._Imagems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Noticia_Comentario", Storage="_Comentarios", ThisKey="NoticiaId", OtherKey="NoticiaId")]
		public EntitySet<Comentario> Comentarios
		{
			get
			{
				return this._Comentarios;
			}
			set
			{
				this._Comentarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Noticia_Video", Storage="_Videos", ThisKey="NoticiaId", OtherKey="NoticiaId")]
		public EntitySet<Video> Videos
		{
			get
			{
				return this._Videos;
			}
			set
			{
				this._Videos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Noticia_VotoNoticia", Storage="_VotoNoticias", ThisKey="NoticiaId", OtherKey="NoticiaId")]
		public EntitySet<VotoNoticia> VotoNoticias
		{
			get
			{
				return this._VotoNoticias;
			}
			set
			{
				this._VotoNoticias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Noticia_NoticiaFlagged", Storage="_NoticiaFlaggeds", ThisKey="NoticiaId", OtherKey="NoticiaId")]
		public EntitySet<NoticiaFlagged> NoticiaFlaggeds
		{
			get
			{
				return this._NoticiaFlaggeds;
			}
			set
			{
				this._NoticiaFlaggeds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jornalista_Noticia", Storage="_Jornalista", ThisKey="JornalistaId", OtherKey="JornalistaId", IsForeignKey=true)]
		public Jornalista Jornalista
		{
			get
			{
				return this._Jornalista.Entity;
			}
			set
			{
				Jornalista previousValue = this._Jornalista.Entity;
				if (((previousValue != value) 
							|| (this._Jornalista.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Jornalista.Entity = null;
						previousValue.Noticias.Remove(this);
					}
					this._Jornalista.Entity = value;
					if ((value != null))
					{
						value.Noticias.Add(this);
						this._JornalistaId = value.JornalistaId;
					}
					else
					{
						this._JornalistaId = default(System.Guid);
					}
					this.SendPropertyChanged("Jornalista");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mapa_Noticia", Storage="_Mapa", ThisKey="MapaId", OtherKey="MapaId", IsForeignKey=true)]
		public Mapa Mapa
		{
			get
			{
				return this._Mapa.Entity;
			}
			set
			{
				Mapa previousValue = this._Mapa.Entity;
				if (((previousValue != value) 
							|| (this._Mapa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mapa.Entity = null;
						previousValue.Noticias.Remove(this);
					}
					this._Mapa.Entity = value;
					if ((value != null))
					{
						value.Noticias.Add(this);
						this._MapaId = value.MapaId;
					}
					else
					{
						this._MapaId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Mapa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Imagems(Imagem entity)
		{
			this.SendPropertyChanging();
			entity.Noticia = this;
		}
		
		private void detach_Imagems(Imagem entity)
		{
			this.SendPropertyChanging();
			entity.Noticia = null;
		}
		
		private void attach_Comentarios(Comentario entity)
		{
			this.SendPropertyChanging();
			entity.Noticia = this;
		}
		
		private void detach_Comentarios(Comentario entity)
		{
			this.SendPropertyChanging();
			entity.Noticia = null;
		}
		
		private void attach_Videos(Video entity)
		{
			this.SendPropertyChanging();
			entity.Noticia = this;
		}
		
		private void detach_Videos(Video entity)
		{
			this.SendPropertyChanging();
			entity.Noticia = null;
		}
		
		private void attach_VotoNoticias(VotoNoticia entity)
		{
			this.SendPropertyChanging();
			entity.Noticia = this;
		}
		
		private void detach_VotoNoticias(VotoNoticia entity)
		{
			this.SendPropertyChanging();
			entity.Noticia = null;
		}
		
		private void attach_NoticiaFlaggeds(NoticiaFlagged entity)
		{
			this.SendPropertyChanging();
			entity.Noticia = this;
		}
		
		private void detach_NoticiaFlaggeds(NoticiaFlagged entity)
		{
			this.SendPropertyChanging();
			entity.Noticia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mapa")]
	public partial class Mapa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MapaId;
		
		private System.Guid _NoticiaId;
		
		private string _Morada;
		
		private double _Longitude;
		
		private double _Latidude;
		
		private bool _isTour;
		
		private EntitySet<Tour> _Tours;
		
		private EntitySet<Noticia> _Noticias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMapaIdChanging(System.Guid value);
    partial void OnMapaIdChanged();
    partial void OnNoticiaIdChanging(System.Guid value);
    partial void OnNoticiaIdChanged();
    partial void OnMoradaChanging(string value);
    partial void OnMoradaChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    partial void OnLatidudeChanging(double value);
    partial void OnLatidudeChanged();
    partial void OnisTourChanging(bool value);
    partial void OnisTourChanged();
    #endregion
		
		public Mapa()
		{
			this._Tours = new EntitySet<Tour>(new Action<Tour>(this.attach_Tours), new Action<Tour>(this.detach_Tours));
			this._Noticias = new EntitySet<Noticia>(new Action<Noticia>(this.attach_Noticias), new Action<Noticia>(this.detach_Noticias));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapaId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MapaId
		{
			get
			{
				return this._MapaId;
			}
			set
			{
				if ((this._MapaId != value))
				{
					this.OnMapaIdChanging(value);
					this.SendPropertyChanging();
					this._MapaId = value;
					this.SendPropertyChanged("MapaId");
					this.OnMapaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticiaId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid NoticiaId
		{
			get
			{
				return this._NoticiaId;
			}
			set
			{
				if ((this._NoticiaId != value))
				{
					this.OnNoticiaIdChanging(value);
					this.SendPropertyChanging();
					this._NoticiaId = value;
					this.SendPropertyChanged("NoticiaId");
					this.OnNoticiaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Morada", DbType="VarChar(256)")]
		public string Morada
		{
			get
			{
				return this._Morada;
			}
			set
			{
				if ((this._Morada != value))
				{
					this.OnMoradaChanging(value);
					this.SendPropertyChanging();
					this._Morada = value;
					this.SendPropertyChanged("Morada");
					this.OnMoradaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latidude", DbType="Float NOT NULL")]
		public double Latidude
		{
			get
			{
				return this._Latidude;
			}
			set
			{
				if ((this._Latidude != value))
				{
					this.OnLatidudeChanging(value);
					this.SendPropertyChanging();
					this._Latidude = value;
					this.SendPropertyChanged("Latidude");
					this.OnLatidudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isTour", DbType="Bit NOT NULL")]
		public bool isTour
		{
			get
			{
				return this._isTour;
			}
			set
			{
				if ((this._isTour != value))
				{
					this.OnisTourChanging(value);
					this.SendPropertyChanging();
					this._isTour = value;
					this.SendPropertyChanged("isTour");
					this.OnisTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mapa_Tour", Storage="_Tours", ThisKey="MapaId", OtherKey="MapaId")]
		public EntitySet<Tour> Tours
		{
			get
			{
				return this._Tours;
			}
			set
			{
				this._Tours.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mapa_Noticia", Storage="_Noticias", ThisKey="MapaId", OtherKey="MapaId")]
		public EntitySet<Noticia> Noticias
		{
			get
			{
				return this._Noticias;
			}
			set
			{
				this._Noticias.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tours(Tour entity)
		{
			this.SendPropertyChanging();
			entity.Mapa = this;
		}
		
		private void detach_Tours(Tour entity)
		{
			this.SendPropertyChanging();
			entity.Mapa = null;
		}
		
		private void attach_Noticias(Noticia entity)
		{
			this.SendPropertyChanging();
			entity.Mapa = this;
		}
		
		private void detach_Noticias(Noticia entity)
		{
			this.SendPropertyChanging();
			entity.Mapa = null;
		}
	}
}
#pragma warning restore 1591
