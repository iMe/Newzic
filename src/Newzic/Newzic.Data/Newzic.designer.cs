#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30128.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Newzic.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertImagens(Imagens instance);
    partial void UpdateImagens(Imagens instance);
    partial void DeleteImagens(Imagens instance);
    partial void InsertVideos(Videos instance);
    partial void UpdateVideos(Videos instance);
    partial void DeleteVideos(Videos instance);
    partial void InsertMapas(Mapas instance);
    partial void UpdateMapas(Mapas instance);
    partial void DeleteMapas(Mapas instance);
    partial void InsertNoticias(Noticias instance);
    partial void UpdateNoticias(Noticias instance);
    partial void DeleteNoticias(Noticias instance);
    partial void InsertJornalistas(Jornalistas instance);
    partial void UpdateJornalistas(Jornalistas instance);
    partial void DeleteJornalistas(Jornalistas instance);
    partial void InsertModeradores(Moderadores instance);
    partial void UpdateModeradores(Moderadores instance);
    partial void DeleteModeradores(Moderadores instance);
    partial void InsertAdministradores(Administradores instance);
    partial void UpdateAdministradores(Administradores instance);
    partial void DeleteAdministradores(Administradores instance);
    partial void InsertQueixas(Queixas instance);
    partial void UpdateQueixas(Queixas instance);
    partial void DeleteQueixas(Queixas instance);
    partial void InsertSessao(Sessao instance);
    partial void UpdateSessao(Sessao instance);
    partial void DeleteSessao(Sessao instance);
    partial void InsertNoticiasImagens(NoticiasImagens instance);
    partial void UpdateNoticiasImagens(NoticiasImagens instance);
    partial void DeleteNoticiasImagens(NoticiasImagens instance);
    partial void InsertNoticiasVideos(NoticiasVideos instance);
    partial void UpdateNoticiasVideos(NoticiasVideos instance);
    partial void DeleteNoticiasVideos(NoticiasVideos instance);
    #endregion
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Imagens> Imagens
		{
			get
			{
				return this.GetTable<Imagens>();
			}
		}
		
		public System.Data.Linq.Table<Videos> Videos
		{
			get
			{
				return this.GetTable<Videos>();
			}
		}
		
		public System.Data.Linq.Table<Mapas> Mapas
		{
			get
			{
				return this.GetTable<Mapas>();
			}
		}
		
		public System.Data.Linq.Table<Noticias> Noticias
		{
			get
			{
				return this.GetTable<Noticias>();
			}
		}
		
		public System.Data.Linq.Table<Jornalistas> Jornalistas
		{
			get
			{
				return this.GetTable<Jornalistas>();
			}
		}
		
		public System.Data.Linq.Table<Moderadores> Moderadores
		{
			get
			{
				return this.GetTable<Moderadores>();
			}
		}
		
		public System.Data.Linq.Table<Administradores> Administradores
		{
			get
			{
				return this.GetTable<Administradores>();
			}
		}
		
		public System.Data.Linq.Table<Queixas> Queixas
		{
			get
			{
				return this.GetTable<Queixas>();
			}
		}
		
		public System.Data.Linq.Table<Sessao> Sessaos
		{
			get
			{
				return this.GetTable<Sessao>();
			}
		}
		
		public System.Data.Linq.Table<NoticiasImagens> NoticiasImagens
		{
			get
			{
				return this.GetTable<NoticiasImagens>();
			}
		}
		
		public System.Data.Linq.Table<NoticiasVideos> NoticiasVideos
		{
			get
			{
				return this.GetTable<NoticiasVideos>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Imagens : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private byte[] _Img;
		
		private EntitySet<NoticiasImagens> _NoticiasImagens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnImgChanging(byte[] value);
    partial void OnImgChanged();
    #endregion
		
		public Imagens()
		{
			this._NoticiasImagens = new EntitySet<NoticiasImagens>(new Action<NoticiasImagens>(this.attach_NoticiasImagens), new Action<NoticiasImagens>(this.detach_NoticiasImagens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Img", CanBeNull=false)]
		public byte[] Img
		{
			get
			{
				return this._Img;
			}
			set
			{
				if ((this._Img != value))
				{
					this.OnImgChanging(value);
					this.SendPropertyChanging();
					this._Img = value;
					this.SendPropertyChanged("Img");
					this.OnImgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Imagens_NoticiasImagens", Storage="_NoticiasImagens", ThisKey="Id", OtherKey="IdImagem")]
		public EntitySet<NoticiasImagens> NoticiasImagens
		{
			get
			{
				return this._NoticiasImagens;
			}
			set
			{
				this._NoticiasImagens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NoticiasImagens(NoticiasImagens entity)
		{
			this.SendPropertyChanging();
			entity.Imagens = this;
		}
		
		private void detach_NoticiasImagens(NoticiasImagens entity)
		{
			this.SendPropertyChanging();
			entity.Imagens = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Videos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Url;
		
		private EntitySet<NoticiasVideos> _NoticiasVideos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    #endregion
		
		public Videos()
		{
			this._NoticiasVideos = new EntitySet<NoticiasVideos>(new Action<NoticiasVideos>(this.attach_NoticiasVideos), new Action<NoticiasVideos>(this.detach_NoticiasVideos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Videos_NoticiasVideos", Storage="_NoticiasVideos", ThisKey="Id", OtherKey="IdVideo")]
		public EntitySet<NoticiasVideos> NoticiasVideos
		{
			get
			{
				return this._NoticiasVideos;
			}
			set
			{
				this._NoticiasVideos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NoticiasVideos(NoticiasVideos entity)
		{
			this.SendPropertyChanging();
			entity.Videos = this;
		}
		
		private void detach_NoticiasVideos(NoticiasVideos entity)
		{
			this.SendPropertyChanging();
			entity.Videos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Mapas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Mapa;
		
		private EntitySet<Noticias> _Noticias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnMapaChanging(string value);
    partial void OnMapaChanged();
    #endregion
		
		public Mapas()
		{
			this._Noticias = new EntitySet<Noticias>(new Action<Noticias>(this.attach_Noticias), new Action<Noticias>(this.detach_Noticias));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mapa", CanBeNull=false)]
		public string Mapa
		{
			get
			{
				return this._Mapa;
			}
			set
			{
				if ((this._Mapa != value))
				{
					this.OnMapaChanging(value);
					this.SendPropertyChanging();
					this._Mapa = value;
					this.SendPropertyChanged("Mapa");
					this.OnMapaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mapas_Noticias", Storage="_Noticias", ThisKey="Id", OtherKey="IdMapa")]
		public EntitySet<Noticias> Noticias
		{
			get
			{
				return this._Noticias;
			}
			set
			{
				this._Noticias.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Noticias(Noticias entity)
		{
			this.SendPropertyChanging();
			entity.Mapas = this;
		}
		
		private void detach_Noticias(Noticias entity)
		{
			this.SendPropertyChanging();
			entity.Mapas = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Noticias : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Titulo;
		
		private string _Corpo;
		
		private System.Guid _IdUser;
		
		private System.Guid _IdMapa;
		
		private int _Votos;
		
		private System.DateTime _Data;
		
		private EntitySet<NoticiasImagens> _NoticiasImagens;
		
		private EntitySet<NoticiasVideos> _NoticiasVideos;
		
		private EntityRef<Mapas> _Mapas;
		
		private EntityRef<Jornalistas> _Jornalistas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnTituloChanging(string value);
    partial void OnTituloChanged();
    partial void OnCorpoChanging(string value);
    partial void OnCorpoChanged();
    partial void OnIdUserChanging(System.Guid value);
    partial void OnIdUserChanged();
    partial void OnIdMapaChanging(System.Guid value);
    partial void OnIdMapaChanged();
    partial void OnVotosChanging(int value);
    partial void OnVotosChanged();
    partial void OnDataChanging(System.DateTime value);
    partial void OnDataChanged();
    #endregion
		
		public Noticias()
		{
			this._NoticiasImagens = new EntitySet<NoticiasImagens>(new Action<NoticiasImagens>(this.attach_NoticiasImagens), new Action<NoticiasImagens>(this.detach_NoticiasImagens));
			this._NoticiasVideos = new EntitySet<NoticiasVideos>(new Action<NoticiasVideos>(this.attach_NoticiasVideos), new Action<NoticiasVideos>(this.detach_NoticiasVideos));
			this._Mapas = default(EntityRef<Mapas>);
			this._Jornalistas = default(EntityRef<Jornalistas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titulo", CanBeNull=false)]
		public string Titulo
		{
			get
			{
				return this._Titulo;
			}
			set
			{
				if ((this._Titulo != value))
				{
					this.OnTituloChanging(value);
					this.SendPropertyChanging();
					this._Titulo = value;
					this.SendPropertyChanged("Titulo");
					this.OnTituloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Corpo", CanBeNull=false)]
		public string Corpo
		{
			get
			{
				return this._Corpo;
			}
			set
			{
				if ((this._Corpo != value))
				{
					this.OnCorpoChanging(value);
					this.SendPropertyChanging();
					this._Corpo = value;
					this.SendPropertyChanged("Corpo");
					this.OnCorpoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUser")]
		public System.Guid IdUser
		{
			get
			{
				return this._IdUser;
			}
			set
			{
				if ((this._IdUser != value))
				{
					if (this._Jornalistas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUserChanging(value);
					this.SendPropertyChanging();
					this._IdUser = value;
					this.SendPropertyChanged("IdUser");
					this.OnIdUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMapa")]
		public System.Guid IdMapa
		{
			get
			{
				return this._IdMapa;
			}
			set
			{
				if ((this._IdMapa != value))
				{
					if (this._Mapas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMapaChanging(value);
					this.SendPropertyChanging();
					this._IdMapa = value;
					this.SendPropertyChanged("IdMapa");
					this.OnIdMapaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Votos")]
		public int Votos
		{
			get
			{
				return this._Votos;
			}
			set
			{
				if ((this._Votos != value))
				{
					this.OnVotosChanging(value);
					this.SendPropertyChanging();
					this._Votos = value;
					this.SendPropertyChanged("Votos");
					this.OnVotosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data")]
		public System.DateTime Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Noticias_NoticiasImagens", Storage="_NoticiasImagens", ThisKey="Id", OtherKey="IdNoticia")]
		public EntitySet<NoticiasImagens> NoticiasImagens
		{
			get
			{
				return this._NoticiasImagens;
			}
			set
			{
				this._NoticiasImagens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Noticias_NoticiasVideos", Storage="_NoticiasVideos", ThisKey="Id", OtherKey="IdNoticia")]
		public EntitySet<NoticiasVideos> NoticiasVideos
		{
			get
			{
				return this._NoticiasVideos;
			}
			set
			{
				this._NoticiasVideos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mapas_Noticias", Storage="_Mapas", ThisKey="IdMapa", OtherKey="Id", IsForeignKey=true)]
		public Mapas Mapas
		{
			get
			{
				return this._Mapas.Entity;
			}
			set
			{
				Mapas previousValue = this._Mapas.Entity;
				if (((previousValue != value) 
							|| (this._Mapas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mapas.Entity = null;
						previousValue.Noticias.Remove(this);
					}
					this._Mapas.Entity = value;
					if ((value != null))
					{
						value.Noticias.Add(this);
						this._IdMapa = value.Id;
					}
					else
					{
						this._IdMapa = default(System.Guid);
					}
					this.SendPropertyChanged("Mapas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jornalistas_Noticias", Storage="_Jornalistas", ThisKey="IdUser", OtherKey="Id", IsForeignKey=true)]
		public Jornalistas Jornalistas
		{
			get
			{
				return this._Jornalistas.Entity;
			}
			set
			{
				Jornalistas previousValue = this._Jornalistas.Entity;
				if (((previousValue != value) 
							|| (this._Jornalistas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Jornalistas.Entity = null;
						previousValue.Noticias.Remove(this);
					}
					this._Jornalistas.Entity = value;
					if ((value != null))
					{
						value.Noticias.Add(this);
						this._IdUser = value.Id;
					}
					else
					{
						this._IdUser = default(System.Guid);
					}
					this.SendPropertyChanged("Jornalistas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NoticiasImagens(NoticiasImagens entity)
		{
			this.SendPropertyChanging();
			entity.Noticias = this;
		}
		
		private void detach_NoticiasImagens(NoticiasImagens entity)
		{
			this.SendPropertyChanging();
			entity.Noticias = null;
		}
		
		private void attach_NoticiasVideos(NoticiasVideos entity)
		{
			this.SendPropertyChanging();
			entity.Noticias = this;
		}
		
		private void detach_NoticiasVideos(NoticiasVideos entity)
		{
			this.SendPropertyChanging();
			entity.Noticias = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Jornalistas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Nome;
		
		private string _Email;
		
		private string _Password;
		
		private EntitySet<Moderadores> _Moderadores;
		
		private EntitySet<Sessao> _Sessaos;
		
		private EntitySet<Noticias> _Noticias;
		
		private EntitySet<Queixas> _Queixas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public Jornalistas()
		{
			this._Moderadores = new EntitySet<Moderadores>(new Action<Moderadores>(this.attach_Moderadores), new Action<Moderadores>(this.detach_Moderadores));
			this._Sessaos = new EntitySet<Sessao>(new Action<Sessao>(this.attach_Sessaos), new Action<Sessao>(this.detach_Sessaos));
			this._Noticias = new EntitySet<Noticias>(new Action<Noticias>(this.attach_Noticias), new Action<Noticias>(this.detach_Noticias));
			this._Queixas = new EntitySet<Queixas>(new Action<Queixas>(this.attach_Queixas), new Action<Queixas>(this.detach_Queixas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jornalistas_Moderadores", Storage="_Moderadores", ThisKey="Id", OtherKey="Id")]
		public EntitySet<Moderadores> Moderadores
		{
			get
			{
				return this._Moderadores;
			}
			set
			{
				this._Moderadores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jornalistas_Sessao", Storage="_Sessaos", ThisKey="Id", OtherKey="Id")]
		public EntitySet<Sessao> Sessaos
		{
			get
			{
				return this._Sessaos;
			}
			set
			{
				this._Sessaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jornalistas_Noticias", Storage="_Noticias", ThisKey="Id", OtherKey="IdUser")]
		public EntitySet<Noticias> Noticias
		{
			get
			{
				return this._Noticias;
			}
			set
			{
				this._Noticias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jornalistas_Queixas", Storage="_Queixas", ThisKey="Id", OtherKey="IdQueixoso")]
		public EntitySet<Queixas> Queixas
		{
			get
			{
				return this._Queixas;
			}
			set
			{
				this._Queixas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Moderadores(Moderadores entity)
		{
			this.SendPropertyChanging();
			entity.Jornalistas = this;
		}
		
		private void detach_Moderadores(Moderadores entity)
		{
			this.SendPropertyChanging();
			entity.Jornalistas = null;
		}
		
		private void attach_Sessaos(Sessao entity)
		{
			this.SendPropertyChanging();
			entity.Jornalistas = this;
		}
		
		private void detach_Sessaos(Sessao entity)
		{
			this.SendPropertyChanging();
			entity.Jornalistas = null;
		}
		
		private void attach_Noticias(Noticias entity)
		{
			this.SendPropertyChanging();
			entity.Jornalistas = this;
		}
		
		private void detach_Noticias(Noticias entity)
		{
			this.SendPropertyChanging();
			entity.Jornalistas = null;
		}
		
		private void attach_Queixas(Queixas entity)
		{
			this.SendPropertyChanging();
			entity.Jornalistas = this;
		}
		
		private void detach_Queixas(Queixas entity)
		{
			this.SendPropertyChanging();
			entity.Jornalistas = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Moderadores : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private EntitySet<Administradores> _Administradores;
		
		private EntityRef<Jornalistas> _Jornalistas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    #endregion
		
		public Moderadores()
		{
			this._Administradores = new EntitySet<Administradores>(new Action<Administradores>(this.attach_Administradores), new Action<Administradores>(this.detach_Administradores));
			this._Jornalistas = default(EntityRef<Jornalistas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._Jornalistas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Moderadores_Administradores", Storage="_Administradores", ThisKey="Id", OtherKey="Id")]
		public EntitySet<Administradores> Administradores
		{
			get
			{
				return this._Administradores;
			}
			set
			{
				this._Administradores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jornalistas_Moderadores", Storage="_Jornalistas", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public Jornalistas Jornalistas
		{
			get
			{
				return this._Jornalistas.Entity;
			}
			set
			{
				Jornalistas previousValue = this._Jornalistas.Entity;
				if (((previousValue != value) 
							|| (this._Jornalistas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Jornalistas.Entity = null;
						previousValue.Moderadores.Remove(this);
					}
					this._Jornalistas.Entity = value;
					if ((value != null))
					{
						value.Moderadores.Add(this);
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(System.Guid);
					}
					this.SendPropertyChanged("Jornalistas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Administradores(Administradores entity)
		{
			this.SendPropertyChanging();
			entity.Moderadores = this;
		}
		
		private void detach_Administradores(Administradores entity)
		{
			this.SendPropertyChanging();
			entity.Moderadores = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Administradores : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private EntityRef<Moderadores> _Moderadores;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    #endregion
		
		public Administradores()
		{
			this._Moderadores = default(EntityRef<Moderadores>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._Moderadores.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Moderadores_Administradores", Storage="_Moderadores", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public Moderadores Moderadores
		{
			get
			{
				return this._Moderadores.Entity;
			}
			set
			{
				Moderadores previousValue = this._Moderadores.Entity;
				if (((previousValue != value) 
							|| (this._Moderadores.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Moderadores.Entity = null;
						previousValue.Administradores.Remove(this);
					}
					this._Moderadores.Entity = value;
					if ((value != null))
					{
						value.Administradores.Add(this);
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(System.Guid);
					}
					this.SendPropertyChanged("Moderadores");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Queixas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _IdQueixoso;
		
		private System.Guid _IdUser;
		
		private string _Corpo;
		
		private EntityRef<Jornalistas> _Jornalistas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnIdQueixosoChanging(System.Guid value);
    partial void OnIdQueixosoChanged();
    partial void OnIdUserChanging(System.Guid value);
    partial void OnIdUserChanged();
    partial void OnCorpoChanging(string value);
    partial void OnCorpoChanged();
    #endregion
		
		public Queixas()
		{
			this._Jornalistas = default(EntityRef<Jornalistas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdQueixoso")]
		public System.Guid IdQueixoso
		{
			get
			{
				return this._IdQueixoso;
			}
			set
			{
				if ((this._IdQueixoso != value))
				{
					if (this._Jornalistas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdQueixosoChanging(value);
					this.SendPropertyChanging();
					this._IdQueixoso = value;
					this.SendPropertyChanged("IdQueixoso");
					this.OnIdQueixosoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUser")]
		public System.Guid IdUser
		{
			get
			{
				return this._IdUser;
			}
			set
			{
				if ((this._IdUser != value))
				{
					this.OnIdUserChanging(value);
					this.SendPropertyChanging();
					this._IdUser = value;
					this.SendPropertyChanged("IdUser");
					this.OnIdUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Corpo", CanBeNull=false)]
		public string Corpo
		{
			get
			{
				return this._Corpo;
			}
			set
			{
				if ((this._Corpo != value))
				{
					this.OnCorpoChanging(value);
					this.SendPropertyChanging();
					this._Corpo = value;
					this.SendPropertyChanged("Corpo");
					this.OnCorpoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jornalistas_Queixas", Storage="_Jornalistas", ThisKey="IdQueixoso", OtherKey="Id", IsForeignKey=true)]
		public Jornalistas Jornalistas
		{
			get
			{
				return this._Jornalistas.Entity;
			}
			set
			{
				Jornalistas previousValue = this._Jornalistas.Entity;
				if (((previousValue != value) 
							|| (this._Jornalistas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Jornalistas.Entity = null;
						previousValue.Queixas.Remove(this);
					}
					this._Jornalistas.Entity = value;
					if ((value != null))
					{
						value.Queixas.Add(this);
						this._IdQueixoso = value.Id;
					}
					else
					{
						this._IdQueixoso = default(System.Guid);
					}
					this.SendPropertyChanged("Jornalistas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Sessao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Token;
		
		private System.DateTime _TimeStamp;
		
		private EntityRef<Jornalistas> _Jornalistas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnTokenChanging(string value);
    partial void OnTokenChanged();
    partial void OnTimeStampChanging(System.DateTime value);
    partial void OnTimeStampChanged();
    #endregion
		
		public Sessao()
		{
			this._Jornalistas = default(EntityRef<Jornalistas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._Jornalistas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", CanBeNull=false)]
		public string Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this.OnTokenChanging(value);
					this.SendPropertyChanging();
					this._Token = value;
					this.SendPropertyChanged("Token");
					this.OnTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp")]
		public System.DateTime TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jornalistas_Sessao", Storage="_Jornalistas", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public Jornalistas Jornalistas
		{
			get
			{
				return this._Jornalistas.Entity;
			}
			set
			{
				Jornalistas previousValue = this._Jornalistas.Entity;
				if (((previousValue != value) 
							|| (this._Jornalistas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Jornalistas.Entity = null;
						previousValue.Sessaos.Remove(this);
					}
					this._Jornalistas.Entity = value;
					if ((value != null))
					{
						value.Sessaos.Add(this);
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(System.Guid);
					}
					this.SendPropertyChanged("Jornalistas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class NoticiasImagens : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _IdNoticia;
		
		private System.Guid _IdImagem;
		
		private EntityRef<Noticias> _Noticias;
		
		private EntityRef<Imagens> _Imagens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNoticiaChanging(System.Guid value);
    partial void OnIdNoticiaChanged();
    partial void OnIdImagemChanging(System.Guid value);
    partial void OnIdImagemChanged();
    #endregion
		
		public NoticiasImagens()
		{
			this._Noticias = default(EntityRef<Noticias>);
			this._Imagens = default(EntityRef<Imagens>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNoticia", IsPrimaryKey=true)]
		public System.Guid IdNoticia
		{
			get
			{
				return this._IdNoticia;
			}
			set
			{
				if ((this._IdNoticia != value))
				{
					if (this._Noticias.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNoticiaChanging(value);
					this.SendPropertyChanging();
					this._IdNoticia = value;
					this.SendPropertyChanged("IdNoticia");
					this.OnIdNoticiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdImagem", IsPrimaryKey=true)]
		public System.Guid IdImagem
		{
			get
			{
				return this._IdImagem;
			}
			set
			{
				if ((this._IdImagem != value))
				{
					if (this._Imagens.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdImagemChanging(value);
					this.SendPropertyChanging();
					this._IdImagem = value;
					this.SendPropertyChanged("IdImagem");
					this.OnIdImagemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Noticias_NoticiasImagens", Storage="_Noticias", ThisKey="IdNoticia", OtherKey="Id", IsForeignKey=true)]
		public Noticias Noticias
		{
			get
			{
				return this._Noticias.Entity;
			}
			set
			{
				Noticias previousValue = this._Noticias.Entity;
				if (((previousValue != value) 
							|| (this._Noticias.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Noticias.Entity = null;
						previousValue.NoticiasImagens.Remove(this);
					}
					this._Noticias.Entity = value;
					if ((value != null))
					{
						value.NoticiasImagens.Add(this);
						this._IdNoticia = value.Id;
					}
					else
					{
						this._IdNoticia = default(System.Guid);
					}
					this.SendPropertyChanged("Noticias");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Imagens_NoticiasImagens", Storage="_Imagens", ThisKey="IdImagem", OtherKey="Id", IsForeignKey=true)]
		public Imagens Imagens
		{
			get
			{
				return this._Imagens.Entity;
			}
			set
			{
				Imagens previousValue = this._Imagens.Entity;
				if (((previousValue != value) 
							|| (this._Imagens.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Imagens.Entity = null;
						previousValue.NoticiasImagens.Remove(this);
					}
					this._Imagens.Entity = value;
					if ((value != null))
					{
						value.NoticiasImagens.Add(this);
						this._IdImagem = value.Id;
					}
					else
					{
						this._IdImagem = default(System.Guid);
					}
					this.SendPropertyChanged("Imagens");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class NoticiasVideos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _IdNoticia;
		
		private System.Guid _IdVideo;
		
		private EntityRef<Noticias> _Noticias;
		
		private EntityRef<Videos> _Videos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNoticiaChanging(System.Guid value);
    partial void OnIdNoticiaChanged();
    partial void OnIdVideoChanging(System.Guid value);
    partial void OnIdVideoChanged();
    #endregion
		
		public NoticiasVideos()
		{
			this._Noticias = default(EntityRef<Noticias>);
			this._Videos = default(EntityRef<Videos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNoticia", IsPrimaryKey=true)]
		public System.Guid IdNoticia
		{
			get
			{
				return this._IdNoticia;
			}
			set
			{
				if ((this._IdNoticia != value))
				{
					if (this._Noticias.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNoticiaChanging(value);
					this.SendPropertyChanging();
					this._IdNoticia = value;
					this.SendPropertyChanged("IdNoticia");
					this.OnIdNoticiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVideo", IsPrimaryKey=true)]
		public System.Guid IdVideo
		{
			get
			{
				return this._IdVideo;
			}
			set
			{
				if ((this._IdVideo != value))
				{
					if (this._Videos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdVideoChanging(value);
					this.SendPropertyChanging();
					this._IdVideo = value;
					this.SendPropertyChanged("IdVideo");
					this.OnIdVideoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Noticias_NoticiasVideos", Storage="_Noticias", ThisKey="IdNoticia", OtherKey="Id", IsForeignKey=true)]
		public Noticias Noticias
		{
			get
			{
				return this._Noticias.Entity;
			}
			set
			{
				Noticias previousValue = this._Noticias.Entity;
				if (((previousValue != value) 
							|| (this._Noticias.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Noticias.Entity = null;
						previousValue.NoticiasVideos.Remove(this);
					}
					this._Noticias.Entity = value;
					if ((value != null))
					{
						value.NoticiasVideos.Add(this);
						this._IdNoticia = value.Id;
					}
					else
					{
						this._IdNoticia = default(System.Guid);
					}
					this.SendPropertyChanged("Noticias");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Videos_NoticiasVideos", Storage="_Videos", ThisKey="IdVideo", OtherKey="Id", IsForeignKey=true)]
		public Videos Videos
		{
			get
			{
				return this._Videos.Entity;
			}
			set
			{
				Videos previousValue = this._Videos.Entity;
				if (((previousValue != value) 
							|| (this._Videos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Videos.Entity = null;
						previousValue.NoticiasVideos.Remove(this);
					}
					this._Videos.Entity = value;
					if ((value != null))
					{
						value.NoticiasVideos.Add(this);
						this._IdVideo = value.Id;
					}
					else
					{
						this._IdVideo = default(System.Guid);
					}
					this.SendPropertyChanged("Videos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
